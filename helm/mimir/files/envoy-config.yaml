# See:
# * https://grafana.com/docs/mimir/latest/references/http-api/
# * https://github.com/bitnami/charts/blob/main/bitnami/grafana-mimir/templates/gateway/configmap-http.yaml
# * https://github.com/grafana/mimir/blob/mimir-2.10.0/operations/helm/charts/mimir-distributed/values.yaml#L2643-L2782
# Access Logs:
# * https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage
# * https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/open_telemetry/v3/logs_service.proto
# * https://github.com/helpfulBadger/envoy_getting_started/blob/master/08_log_taps_traces/front-envoy-jaeger.yaml
{{- $prometheusPrefix := .Values.config.api.prometheus_http_prefix | trimSuffix "/" }}
{{- $alertmanagerPrefix := .Values.config.api.alertmanager_http_prefix | trimSuffix "/" }}
{{- $accessLog := .Values.proxy.accessLog }}
---
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 8001
static_resources:
  listeners:
    - name: mimir
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9009
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            path: /
                          direct_response:
                            status: 200
                            body:
                              inline_string: OK
                        # Distributor endpoints
                        - match:
                            prefix: /distributor
                          route:
                            cluster: mimir-write-http
                        - match:
                            path: /api/v1/push
                          route:
                            cluster: mimir-write-http
                        - match:
                            prefix: /otlp/v1/metrics
                          route:
                            cluster: mimir-write-http
                        # Alertmanager endpoints
                        - match:
                            prefix: {{ $alertmanagerPrefix }}
                          route:
                            cluster: mimir-backend-http
                        - match:
                            path: /multitenant_alertmanager/status
                          route:
                            cluster: mimir-backend-http
                        - match:
                            path: /api/v1/alerts
                          route:
                            cluster: mimir-backend-http
                        # Ruler endpoints
                        - match:
                            prefix: {{ $prometheusPrefix }}/config/v1/rules
                          route:
                            cluster: mimir-backend-http
                        - match:
                            prefix: {{ $prometheusPrefix }}/api/v1/rules
                          route:
                            cluster: mimir-backend-http
                        - match:
                            prefix: {{ $prometheusPrefix }}/api/v1/alerts
                          route:
                            cluster: mimir-backend-http
                        - match:
                            path: /ruler/ring
                          route:
                            cluster: mimir-backend-http
                        # Rest of /prometheus goes to the query-frontend
                        - match:
                            prefix: {{ $prometheusPrefix }}
                          route:
                            cluster: mimir-read-http
                        # Buildinfo endpoint can go to any component
                        - match:
                            path: /api/v1/status/buildinfo
                          route:
                            cluster: mimir-read-http
                        # Compactor endpoint for uploading blocks
                        - match:
                            prefix: /api/v1/upload/block/
                          route:
                            cluster: mimir-backend-http
                access_log:
                {{- if $accessLog.openTelemetry.enabled }}
                  {{- $ot := $accessLog.openTelemetry }}
                  - name: envoy.access_loggers.open_telemetry
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig
                      common_config:
                        log_name: mimir
                        transport_api_version: V3
                        grpc_service:
                          {{- toYaml $ot.grpcService | nindent 26 }}
                      body:
                        # default log format (https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#default-format-string)
                        string_value: >
                          [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                      attributes:
                        {{- .Files.Get "files/opentelemetry-attributes.yaml" | trim | nindent 24 }}
                {{- end }}
  clusters:
    - name: mimir-read-http
      type: LOGICAL_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: mimir-read-http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ include "mimir.fullname" . }}-read
                      port_value: 9009
    - name: mimir-write-http
      type: LOGICAL_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: mimir-write-http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ include "mimir.fullname" . }}-write
                      port_value: 9009
    - name: mimir-backend-http
      type: LOGICAL_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: mimir-backend-http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ include "mimir.fullname" . }}-backend
                      port_value: 9009
