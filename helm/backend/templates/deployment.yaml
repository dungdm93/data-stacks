apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.app.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret:    {{ include (print $.Template.BasePath "/secret.yaml") .    | sha256sum }}
        {{- with .Values.app.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      enableServiceLinks: false
      containers:
        - name:  app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.app.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.app.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- if .Values.env }}
          env:
            {{- include "backend.env" . | nindent 12 }}
        {{- end }}
        {{- if .Values.envFrom }}
          envFrom:
            {{- include "backend.envFrom" . | nindent 12 }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
        {{- if .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
        {{- end }}
        {{- if .Values.volumeDevices }}
          volumeDevices:
            {{- toYaml .Values.volumeDevices | nindent 12 }}
        {{- end }}
        {{- with .Values.app.healthcheck.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.app.healthcheck.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.app.healthcheck.startup }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      priorityClassName:  {{ .Values.app.priorityClassName }}
      runtimeClassName:   {{ .Values.app.runtimeClassName }}
      schedulerName:      {{ .Values.app.schedulerName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.volumes }}
      volumes:
        {{- include "backend.volumes" . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
