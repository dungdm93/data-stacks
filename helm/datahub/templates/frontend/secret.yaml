{{- $secret := (lookup "v1" "Secret" .Release.Namespace (printf "%s-frontend" (include "datahub.fullname" .))).data | default dict -}}

{{ $env := dict }}
{{- include "datahub.setSecretEnv" (list $env "DATAHUB_SECRET" .Values.frontend.secretKey $secret (randAlphaNum 32)) }}

{{- $oidcAuth := .Values.authn.frontend.oidc }}
{{- $_ := set $env "AUTH_OIDC_ENABLED" $oidcAuth.enabled }}
{{- if $oidcAuth.enabled }}
  {{- $_ := set $env "AUTH_OIDC_BASE_URL" (.Values.frontend.baseUrl | required "missing 'frontend.baseUrl'") }}
  {{- $_ := set $env "AUTH_OIDC_CLIENT_ID"     ($oidcAuth.clientId     | required "missing 'authn.frontend.oidc.clientId'") }}
  {{- $_ := set $env "AUTH_OIDC_CLIENT_SECRET" ($oidcAuth.clientSecret | required "missing 'authn.frontend.oidc.clientSecret'") }}
  {{- $_ := set $env "AUTH_OIDC_DISCOVERY_URI" ($oidcAuth.discoveryUri | required "missing 'authn.frontend.oidc.discoveryUri'") }}

  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_USER_NAME_CLAIM"                 $oidcAuth.userNameClaim) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_USER_NAME_CLAIM_REGEX"           $oidcAuth.userNameClaimRegex) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_SCOPE"                           $oidcAuth.scope) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_CLIENT_AUTHENTICATION_METHOD"    $oidcAuth.clientAuthenticationMethod) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_JIT_PROVISIONING_ENABLED"        $oidcAuth.jitProvisioningEnabled) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_PRE_PROVISIONING_REQUIRED"       $oidcAuth.preProvisioningRequired) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_EXTRACT_GROUPS_ENABLED"          $oidcAuth.extractGroupsEnabled) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_GROUPS_CLAIM"                    $oidcAuth.groupsClaim) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_RESPONSE_TYPE"                   $oidcAuth.responseType) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_RESPONSE_MODE"                   $oidcAuth.responseMode) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_USE_NONCE"                       $oidcAuth.useNonce) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_READ_TIMEOUT"                    $oidcAuth.readTimeout) }}
  {{- include "datahub.setEnv" (list $env "AUTH_OIDC_EXTRACT_JWT_ACCESS_TOKEN_CLAIMS" $oidcAuth.extractJwtAccessTokenClaims) }}
{{- end }}

{{- $jaasAuth := .Values.authn.frontend.jaas }}
{{- $_ := set $env "AUTH_JAAS_ENABLED" $jaasAuth.enabled }}

{{- $nativeAuth := .Values.authn.frontend.native }}
{{- if not $nativeAuth.enabled }}
  # BUG: issue on frontend make AUTH_NATIVE_ENABLED=true won't work
  {{- $_ := set $env "AUTH_NATIVE_ENABLED" false }}
{{- end }}

{{- $elasticsearch := .Values.elasticsearch }}
{{- $_ := set $env "ELASTIC_CLIENT_HOST" ($elasticsearch.host | required "missing 'elasticsearch.host'") }}
{{- $_ := set $env "ELASTIC_CLIENT_PORT" ($elasticsearch.port | required "missing 'elasticsearch.port'") }}
{{- $_ := set $env "ELASTIC_CLIENT_USE_SSL" $elasticsearch.useSSL }}
{{- if $elasticsearch.username }}
  {{- $_ := set $env "ELASTIC_CLIENT_USERNAME" $elasticsearch.username }}
  {{- $_ := set $env "ELASTIC_CLIENT_PASSWORD" ($elasticsearch.password | required "missing 'elasticsearch.password'") }}
{{- end }}
{{- include "datahub.setEnv" (list $env "ELASTIC_INDEX_PREFIX" $elasticsearch.index.prefix) }}

{{- if .Values.analytics.enabled}}
  {{- include "datahub.setEnv" (list $env "DATAHUB_TRACKING_TOPIC" .Values.kafka.topics.usageEvent) }} # = DATAHUB_USAGE_EVENT_NAME
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "datahub.fullname" . }}-frontend
  labels:
    {{- include "datahub.frontend.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- range $key, $value := $env }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
