{{- $action := dict "source" (dict "type" "kafka") "datahub" dict }}
{{- $source := $action.source }}
{{- $datahub := $action.datahub }}

# https://github.com/acryldata/datahub-actions/blob/main/datahub-actions/src/datahub_actions/plugin/source/kafka/kafka_event_source.py
{{- $kafka := .Values.kafka }}
{{- $_ := set $source "config" (dict "connection" (dict) "topic_routes" (dict)) }}
{{- $_ := set $source.config.connection "bootstrap" (join "," $kafka.bootstrapServers) }}
{{- if eq $kafka.schemaRegistry.type "CONFLUENT" -}}
  {{- $confluent := $kafka.confluent }}
  {{- $_ := set $source.config.connection "schema_registry_url" ($confluent.url | required "missing 'kafka.confluent.url'") }}
{{- end -}}
{{- $topics := $kafka.topics }}
{{- include "datahub.setEnv" (list $source.config.topic_routes "mcl" $topics.metadataChangeLogVersioned) }}
{{- include "datahub.setEnv" (list $source.config.topic_routes "pe"  $topics.platformEvent) }}
{{- if not $source.config.topic_routes -}}
  {{- $_ := unset $source.config "topic_routes" }}
{{- end -}}

# https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/graph/client.py#L52
{{- $_ := set $datahub "server" (printf "http://%s-gms:8080" (include "datahub.fullname" .)) }}
{{- if .Values.authn.gms.enabled }}
  {{- $_ := set $datahub "extra_headers" (dict "Authorization" "Basic ${DATAHUB_SYSTEM_CLIENT_ID:-__datahub_system}:${DATAHUB_SYSTEM_CLIENT_SECRET}") }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "datahub.fullname" . }}-actions
  labels:
    {{- include "datahub.actions.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- range $config := .Values.actions.pipelineConfigs }}
  {{- $pipeline := mergeOverwrite (deepCopy $action) $config }}
  {{- $pipelineName := $pipeline.name | required "missing pipeline name" }}
  {{ $pipelineName }}.yaml: |
    {{- toYaml $pipeline | nindent 4 }}
  {{- end }}
