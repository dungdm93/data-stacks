nameOverride: ""
fullnameOverride: ""

image:
  repository: confluentinc/cp-schema-registry
  tag: 6.1.0

imagePullPolicy: IfNotPresent
imagePullSecrets: []
# - name: regcred

# https://docs.confluent.io/platform/current/schema-registry/installation/config.html
schemaRegistry:
  kafkastore.bootstrap.servers: ""

replicas: 1

labels: {}
podLabels: {}
annotations: {}
podAnnotations: {}

command: []
args: []
env: []
volumes: []
volumeMounts: []

podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

schedulerName: null
runtimeClassName: null
priorityClassName: null

affinity: {}
tolerations: []
nodeSelector: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  # If true, create & use RBAC resources
  create: true
  # If true, create and use PodSecurityPolicy
  pspEnable: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable:

service:
  type: ClusterIP
  port: 8081
  nodePort:
  annotations: {}
  sessionAffinity: None
  sessionAffinityConfig: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: schema-registry.local
      paths: []
  tls: []
  #  - secretName: schema-registry-tls
  #    hosts:
  #      - schema-registry.local
