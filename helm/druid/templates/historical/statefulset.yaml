{{- $historicalK8sDefault := fromYaml (include "druid.historical.k8s.default" .) }}

{{- range $group := .Values.historical }}
{{- $historical := mergeOverwrite (deepCopy $.Values.commons) $historicalK8sDefault $group -}}
{{- $persistence := $historical.persistence }}
{{- if $persistence.enabled }}
{{- $_ := dict "fsGroup" 1000 | mergeOverwrite $historical.podSecurityContext }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "druid.fullname" $ }}-historical-{{ $historical.tier }}
  labels:
    {{- include "druid.historical.labels" (list $ $historical.tier) | nindent 4 }}
    {{- with $historical.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- toYaml $historical.annotations | nindent 4 }}
spec:
  replicas: {{ $historical.replicas }}
  serviceName: {{ template "druid.fullname" $ }}-historical-{{ $historical.tier }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "druid.historical.selectorLabels" (list $ $historical.tier) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "druid.historical.selectorLabels" (list $ $historical.tier) | nindent 8 }}
        {{- with $historical.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "druid.historical.checksum" $ | nindent 8 }}
        {{- with $historical.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml $ | nindent 8 }}
    {{- end }}
      enableServiceLinks: false
      containers:
        - name: druid-historical
          image: {{ include "druid.image" $ }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
        {{- with $historical.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with $historical.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          env:
            {{- toYaml $historical.env | nindent 12 }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 8083
          {{- if semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion }}
          startupProbe:
            httpGet:
              port: http
              path: /status/health
            periodSeconds: 10
            failureThreshold: 180  # total 30m
          {{- end }}
          livenessProbe:
            httpGet:
              port: http
              path: /status/health
          readinessProbe:
            httpGet:
              port: http
              path: /status/selfDiscovered
          volumeMounts:
            {{- include "druid.historical.volumeMounts" (list $ $historical) | nindent 12 }}
          resources:
            {{- toYaml $historical.resources | nindent 12 }}
          securityContext:
            {{- toYaml $historical.securityContext | nindent 12 }}
      serviceAccountName: {{ include "druid.historical.serviceAccountName" $ }}
      priorityClassName:  {{ $historical.priorityClassName }}
      runtimeClassName:   {{ $historical.runtimeClassName }}
      schedulerName:      {{ $historical.schedulerName }}
      securityContext:
        {{- toYaml $historical.podSecurityContext | nindent 8 }}
      volumes:
        {{- include "druid.historical.volumes" (list $ $historical) | nindent 8 }}
    {{- with $historical.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $historical.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $historical.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if $persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
        annotations:
          {{- toYaml $persistence.annotations | nindent 10 }}
      spec:
        {{- with $persistence.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ $persistence.size | quote }}
        storageClassName: {{ $persistence.storageClass }}
  {{- end }}
{{- end }}
