{{- $historicalConfigDefault := fromYaml (include "druid.historical.config.default" .) }}
{{- $historicalK8sDefault := fromYaml (include "druid.historical.k8s.default" .) }}

{{- range $group := .Values.historical }}
{{- $historicalConfig := dict }}
{{- range $c := $.Values.druid.historical }}
  {{- if eq $c.tier $group.tier }}
    {{- $historicalConfig = $c }}
  {{- end }}
{{- end }}

{{- $historicalConfig := mergeOverwrite (deepCopy $historicalConfigDefault) $historicalConfig -}}
{{- $runtime := index $historicalConfig "runtime.properties" | default dict }}
{{- $jvm := index $historicalConfig "jvm.config" | default "" }}
{{- $extraJvm := index $historicalConfig "extra.jvm.config" | default "" }}
{{- $config := omit $historicalConfig "runtime.properties" "tier" "jvm.config" "extra.jvm.config" }}

{{- $_ := set $runtime "druid.server.tier" $group.tier }}
{{- $historical := mergeOverwrite (deepCopy $.Values.commons) $historicalK8sDefault $group -}}
{{- $persistence := $historical.persistence }}
{{- if $persistence.enabled }}
  {{- $size := hasSuffix "i" $persistence.size | ternary (printf "%sB" $persistence.size) $persistence.size }}
  {{- $path := clean (printf "%s/segment-cache/" $persistence.mountPath) }}
  {{- $location := dict "path" $path "maxSize" $size "freeSpacePercent" 1.0 }}
  {{- $_ := set $runtime "druid.segmentCache.locations" (list $location) }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "druid.fullname" $ }}-historical-{{ $historical.tier }}
  labels:
    {{- include "druid.historical.labels" (list $ $historical.tier) | nindent 4 }}
data:
  runtime.properties: |
    {{- range $key, $value := $runtime }}
    {{ $key }}={{ has (kindOf $value) (list "map" "slice") | ternary (mustToJson $value) $value }}
    {{- end }}

  jvm.config: |
    {{ $jvm | nindent 4 | trim }}
    {{- if $extraJvm }}
    {{ $extraJvm | nindent 4 | trim }}
    {{- end }}

  {{- range $file, $content := $config }}
  {{ $file }}: |
    {{ $content | nindent 4 | trim }}
  {{- end }}
{{- end }}
