secretKey: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/admin#/secret_key" | quote }}
harborAdminPassword: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/admin#/password" | quote }}

### components
nginx:
  replicas: 2

portal:
  replicas: 3
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 1Gi

core:
  replicas: 3
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 2Gi
  secret: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/core#/secret" | quote }}
  xsrfKey: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/core#/xsrf_key" | quote }}
  ## TLS for token encryption/decryption
  secretName: harbor-core-token-tls

jobservice:
  replicas: 2
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 2Gi
  secret: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/jobservice#/secret" | quote }}
  maxJobWorkers: 10
  jobLoggers: [stdout]

registry:
  replicas: 3
  registry:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  controller:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  # relativeurls: false
  secret: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry#/secret" | quote }}
  credentials:
    username: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry/credentials#/username" | quote }}
    password: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry/credentials#/password" | quote }}
    ## The content of htpasswd file based on the value of `registry.credentials.username` `registry.credentials.password`.
    ## Currently `helm` does not support bcrypt in the template script, if the credential is updated
    ## you need to manually generated by calling `htpasswd -nbBC10 $username $password`.
    htpasswd: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry/credentials#/htpasswd" | quote }}
  middleware:
    enabled: false

trivy:
  enabled: true
  replicas: 2
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 2Gi

database:
  type: external
  external:
    host: infradb.dungdm93.me
    port: 5432
    username: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/database#/username" | quote }}
    password: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/database#/password" | quote }}
    coreDatabase: harbor
    sslmode: disable
  maxIdleConns: 10
  maxOpenConns: 64

redis:
  type: internal
  internal:
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 2000m
        memory: 4Gi

exporter:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

### configurations
externalURL: https://harbor.dungdm93.local

proxy:
  components: null

internalTLS:
  enabled: false

expose:
  type: clusterIP
  tls:
    enabled: false
  clusterIP:
    name: harbor

persistence:
  enabled: true
  imageChartStorage:
    type: s3
    # https://github.com/distribution/distribution/blob/main/docs/content/storage-drivers/s3.md
    s3:
      regionendpoint: http://s3.dungdm93.me:7480
      forcepathstyle: true
      region: aws-global
      bucket: apps-harbor
      accesskey: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry/storage#/access_key" | quote }}
      secretkey: {{ fetchSecretValue "ref+vault://secret/gitops/harbor/registry/storage#/secret_key" | quote }}
      v4auth: true
    # By default, harbor will offload push/pull operations to backend storage by giving the client a signed link.
    # However, our S3 endpoint is private so we'll need to disable this behavior by set `disableredirect: true`.
    # See: https://github.com/distribution/distribution/issues/3284
    disableredirect: true
  persistentVolumeClaim:
    redis:
      size: 16Gi
      storageClass: ceph-rbd-ssd
    trivy:
      size: 32Gi
      storageClass: topolvm-ssd

cache:
  enabled: true
  expireHours: 24

metrics:
  enabled: true
  serviceMonitor:
    enabled: true

trace:
  enabled: false
  provider: otel  # jaeger | otel
