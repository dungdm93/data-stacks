hub:
  authenticatePrometheus: false
  # https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#cookie-secret
  cookieSecret: {{ fetchSecretValue "ref+vault://secret/gitops/jupyterhub/hub#/cookie_secret" | quote }}

  ### Kubernetes configs
  networkPolicy:
    enabled: false
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi

proxy:
  # https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#proxy-authentication-token
  secretToken: {{ fetchSecretValue "ref+vault://secret/gitops/jupyterhub/proxy#/secret_token" | quote }}
  service:
    type: ClusterIP
  # https://z2jh.jupyter.org/en/latest/administrator/security.html#https
  https:
    enabled: false # TLS terminated at Ingress controller.
  chp:
    networkPolicy:
      enabled: false
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi

singleuser:
  startTimeout: 1200
  uid: 0
  cmd: start-singleuser.sh
  allowPrivilegeEscalation: true  # allow sudo
  extraPodConfig:
    enableServiceLinks: false
  extraEnv:
    GRANT_SUDO: "yes"
    KUBERNETES_NAMESPACE:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    KUBERNETES_NODE_NAME:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    KUBERNETES_NODE_IP:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    KUBERNETES_POD_NAME:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    KUBERNETES_POD_IP:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP

  # Resources
  cpu:
    limit: 32
    guarantee: 1
  memory:
    limit: 32G
    guarantee: 1G
  extraResource:
    limits:
      ephemeral-storage: 64G
    guarantees:
      ephemeral-storage: 1G
  cloudMetadata:
    blockWithIptables: false
  networkPolicy:
    enabled: false
  storage:
    type: dynamic
    capacity: 10Gi
    extraVolumes:
    - name: hooks
      configMap:
        name: jupyter-hooks
    extraVolumeMounts:
    - name: hooks
      mountPath: /usr/local/bin/start-notebook.d

  # Default image
  image:
    name: jupyter/minimal-notebook
    tag:  latest

  profileList:
  - display_name: Minimal
    description:  Minimal Jupyter Notebook stack
    default: true

  - display_name: PySpark 3.3
    description:  The Jupyter Python + Spark stack
    # https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html
    kubespawner_override: &pyspark
      image: ghcr.io/dungdm93/docker/jupyter/pyspark-notebook:3.3.1
      volumes:
      - name: hooks
        projected:
          sources:
          - configMap:
              name: jupyter-hooks
          - configMap:
              name: spark-hooks
      - name: home
        persistentVolumeClaim:
          claimName: claim-{username}{servername}
      volume_mounts:
      - name: hooks
        mountPath: /usr/local/bin/start-notebook.d
      - name: home
        mountPath: /home/jovyan
      pod_security_context:
        fsGroupChangePolicy: OnRootMismatch

  - display_name: PySpark 3.4
    description:  The Jupyter Python + Spark stack
    kubespawner_override:
      <<: *pyspark
      image: ghcr.io/dungdm93/docker/jupyter/pyspark-notebook:3.4.1

  - display_name: TensorFlow
    description:  The Jupyter Scientific Python stack w/ Tensorflow
    kubespawner_override:
      image: jupyter/tensorflow-notebook

  - display_name: Kotlin
    description:  The Jupyter Kotlin notebook
    kubespawner_override:
      image: ghcr.io/dungdm93/docker/jupyter/kotlin-notebook:1.8

scheduling:
  userScheduler:
    enabled: false
  userPlaceholder:
    enabled: false

prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false

ingress:
  enabled: false

cull:
  enabled: true
  timeout: 86400
