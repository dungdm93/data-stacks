hub:
  publicURL: jupyter.kites.rocks
  baseUrl:   /
  # db:
  #   type: postgres
  #   url:
  #   password:

  ### jupyterhub.app params
  ### docs: https://jupyterhub.readthedocs.io/en/stable/api/app.html
  # concurrentSpawnLimit:    64
  # consecutiveFailureLimit: 5
  # activeServerLimit:
  ### Allow user using multiple servers
  ### docs: https://jupyterhub.readthedocs.io/en/stable/reference/config-user-env.html#named-servers
  # allowNamedServers:        true
  # namedServerLimitPerUser:  5

  ### Kubernetes configs
  # pdb:
  #   enabled: true
  #   minAvailable: 1
  # networkPolicy:
  #   enabled: true
  #   egress:
  #   - to:
  #     - ipBlock:
  #         cidr: 0.0.0.0/0

proxy:
  secretToken: "45b4b4e126d378feddbb3034ae62c55828f1bb078b3dfc4ded15a0ae5158b062"
  service:
    type: ClusterIP
  # docs: https://z2jh.jupyter.org/en/latest/administrator/security.html#https
  https:
    enabled: true
    type: secret
    secret:
      # Created by CertManager ingress-shim
      name: jupyter.kites.rocks-tls
  # pdb:
  #   enabled: true
  #   minAvailable: 1
  # networkPolicy:
  #   enabled: false
  #   egress:
  #   - to:
  #     - ipBlock:
  #         cidr: 0.0.0.0/0

# https://z2jh.jupyter.org/en/latest/administrator/authentication.html
auth:
  admin:
    access: true      # admins can access user's notebooks
    users: [dungdm93]  # list of admins
  # type: google
  # google:
  #   clientId: "yourlongclientidstring.apps.googleusercontent.com"
  #   clientSecret: "adifferentlongstring"
  #   callbackUrl: "http://jupyter.kites.rocks/hub/oauth_callback"
  #   hostedDomain: "kites.rocks"
  #   loginService: "Google OAuth2"
  state:  # docs: https://jupyterhub.readthedocs.io/en/stable/reference/authenticators.html#authentication-state
    enabled: true
    cryptoKey: "342c258df45ce7868f97d1e11e2ba0445a66ebc9f78728a8ebc3d26f43a46493"

singleuser:
  ### Using JupyterLab by default. Other solution:
  # https://z2jh.jupyter.org/en/latest/customizing/user-environment.html#use-jupyterlab-by-default
  # Default command is jupyterhub-singleuser. Other commands aviable are:
  # jupyter-lab, jupyter-notebook, jupyter-labhub, jupyterhub-singleuser
  cmd: start-notebook.sh
  extraEnv:
    JUPYTER_ENABLE_LAB: "yes"
    GRANT_SUDO: "yes"
  uid: 0

  # Resources
  cpu:
    limit: 4
    guarantee: 0.5
  memory:
    limit: 4G
    guarantee: 512M
  storage:
    capacity: 2Gi

  # Default image
  image:
    name: jupyter/minimal-notebook
    tag:  latest

  profileList:
  - display_name: "Minimal"
    description: "Minimal Jupyter Notebook Stack"
    default: true

  - display_name: "PySpark"
    description: "The Jupyter Python + Spark + Mesos stack"
    kubespawner_override:
      image: jupyter/pyspark-notebook
      # service_account: spark-sa
      # TODO: not working, yet.
      # volumes:
      # - name: spark-conf
      #   configMap:
      #     defaultMode: 420
      #     name: spark-conf
      # volumeMounts:
      # - name: spark-conf
      #   mountPath: /usr/local/spark/conf

  - display_name: "TensorFlow"
    description: "The Jupyter Scientific Python stack w/ Tensorflow"
    kubespawner_override:
      image: jupyter/tensorflow-notebook

  ### Kubernetes configs
  # networkPolicy:
  #   enabled: false
  #   egress:
  #   - to:
  #     - ipBlock:
  #         cidr: 0.0.0.0/0
  #         except:
  #         - 169.254.169.254/32

prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    # kubernetes.io/ingress.class: nginx  hosts: []
  tls:
  - secretName: "jupyter.kites.rocks-tls"
    hosts:
    - "jupyter.kites.rocks"
  hosts:
  - "jupyter.kites.rocks"

cull:
  enabled: true
  timeout: 7200
